directive sample 5000.

directive plot C6(); C8(); C10(); C12(); C14(); C16()

val store_rate_6 = 0.5
val store_rate_8 = 0.5
val store_rate_10 = 0.5
val store_rate_12= 0.5
val store_rate_14 = 0.5
val mal_rate = 0.005
val acyl_rate = 0.001

new form6@1.0:chan
new form8@1.0:chan
new form10@1.0:chan
new form12@1.0: chan
new form14@1.0: chan
new form16@1.0: chan

(* 
Acetyl-CoA can either become Malonyl-CoA or Acyl-CoA
From then on each intermediate product has a choice to 
either go on and form a longer product(form channels) 
or get stored. The final products are not involved in any
further interaction and are modelled as empty processes 
just to keep track of their numbers.
*)

let Acetyl_CoA() = 
(
	do delay@mal_rate; Malonyl_CoA()
	or delay@acyl_rate; Acyl_CoA()
)
and Malonyl_CoA() = 
(
	do !form6; ()
	or !form8; ()
	or !form10; ()
	or !form12; ()
	or !form14; ()
	or !form16; ()
)
and Acyl_CoA() = ?form6; Acyl_CoA_6()
and Acyl_CoA_6() = 
(
	do ?form8; Acyl_CoA_8()
	or delay@store_rate_6; C6()
)
and Acyl_CoA_8() = 
(
	do ?form10; Acyl_CoA_10()
	or delay@store_rate_8; C8()
)
and Acyl_CoA_10() = 
(
	do ?form12; Acyl_CoA_12()
	or delay@store_rate_10; C10()
)
and Acyl_CoA_12() = 
(
	do ?form14; Acyl_CoA_14()
	or delay@store_rate_12; C12()
)
and Acyl_CoA_14() = 
(
	do ?form16; Acyl_CoA_16()
	or delay@store_rate_14; C14()
)
and Acyl_CoA_16() = delay@0.0; C16()
and C6() = ()
and C8() = ()
and C10() = ()
and C12() = ()
and C14() = ()
and C16() = ()


run(100 of Acetyl_CoA())



